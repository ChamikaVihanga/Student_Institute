@*@model TestWebAppliction.Models.PaymentModel*@
@model List<TestWebAppliction.Models.StudentCourse.StudentCourseDetailsModel>

@*<link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />

    <script src="_content/MudBlazor/MudBlazor.min.js"></script>*@

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()



    <div class="form-horizontal">
        <h4>
            PaymentModel
        </h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
       @* <div class="form-group  col-md-6">
            @Html.LabelFor(model => model.PayDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PayDate, new { htmlAttributes = new { @type = "date", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PayDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group col-md-6">
           @* @Html.LabelFor(model => model.StudentCourseModel.StudentModel.StudentNo, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @*    @Html.DropDownListFor(model => model.StudentCourseModelID, (IEnumerable<SelectListItem>)ViewBag.sc, null, new { @class = "form-control" })*@
                @using (Html.BeginForm("GetStudentCourseDetails", "StudentCourseDetails", FormMethod.Post))
                {
                    <input type="text" name="input1" />
                    <button type="submit">Search</button>
                }
                @*@Html.ValidationMessageFor(model => model.StudentCourseModelID, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <br />
        <div>
            <div>
                <label> Student Name -  @*@Model.StudentCourseModel.StudentModel.Name*@ </label>
            </div>
            <br />
            @*<div class="form-group">
                @Html.LabelFor(model => model.StudentCourseModel.CourseModel.CourseName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    
                    @Html.EditorFor(model => model.StudentCourseModel.CourseModel.CourseName, new { htmlAttributes = new { @class = "form-control" } })
                    
                </div>
            </div>*@

            <br />

            <div>
                <label> Course Price - @*@Model.StudentCourseModel.StudentModel.Name*@ </label>
            </div>
        </div>
        <br />

        @*<div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PayMethard, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.PayMethard, new SelectList(Enum.GetValues(typeof(TestWebAppliction.Models.Methard))), "Select Methard")

                @Html.ValidationMessageFor(model => model.PayMethard, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Pay" class="btn btn-default colo" />
            </div>
        </div>
    </div>



    //...........

    //...........
    <paper class="d-flex">

    </paper>

    <fieldset>
    </fieldset>


}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
